{"version":3,"file":"static/js/783.df63337b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/Form.module.css?96e5","components/Phonebook/Form.jsx","webpack://react-homework-template/./src/components/Filter/FilterContact.module.css?d536","components/Filter/FilterContact.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactList.module.css?ae34","redux/selectors.js","components/ContactsList/ContactsList.jsx","components/Navigation/Book/Book.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"submit\":\"Form_submit__jSb+Q\",\"label\":\"Form_label__DqYCD\",\"input\":\"Form_input__NlDSS\",\"button\":\"Form_button__MIa0F\",\"form\":\"Form_form__NhNbn\"};","import React from 'react';\nimport css from './Form.module.css';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addContact, listContacts } from '../../redux/contactAPI';\n\nexport default function Form() {\n  const [name, setName] = useState();\n\n  const [number, setNumber] = useState();\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(listContacts());\n  }, [dispatch]);\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dispatch(addContact({ name: name, number: number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.submit}\n          type=\"text\"\n          value={name}\n          onChange={handleChange}\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.submit}\n          type=\"tel\"\n          value={number}\n          onChange={handleChange}\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\" disabled={!name || !number}>\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"Label\":\"FilterContact_Label__V-R7W\",\"Input\":\"FilterContact_Input__VH3Ie\",\"Span\":\"FilterContact_Span__ZQ7Wt\",\"ul\":\"FilterContact_ul__B2SVv\"};","import css from './FilterContact.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from 'redux/filter';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(state => state.filter);\n\n  const filterContact = evt => {\n    dispatch(getFilter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <label className={css.Label}>\n      <span className={css.Span}>Find contacts by name</span>\n      <input\n        className={css.Input}\n        type=\"text\"\n        value={value}\n        onChange={filterContact}\n        name=\"filter\"\n      />\n    </label>\n  );\n};\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"List\":\"ContactList_List__8ZyNy\",\"ContactItem\":\"ContactList_ContactItem__lUjqY\",\"ContactItemText\":\"ContactList_ContactItemText__ajpki\",\"ContactItemSpan\":\"ContactList_ContactItemSpan__X6xYH\",\"button\":\"ContactList_button__AKIJH\",\"btn_ripples\":\"ContactList_btn_ripples__G8EX-\"};","export const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = state => {\n  const filter = selectFilter(state);\n  const contact = state.contacts.items;\n  return contact.filter(item =>\n    item.name.toLowerCase().includes(filter.toLowerCase().trim())\n  );\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact, listContacts } from '../../redux/contactAPI';\nimport { selectFilteredContacts } from 'redux/selectors';\n\n// const getContacts = (items, filter) =>\n//   items.filter(contact =>\n//     contact.name.toLowerCase().includes(filter.toLowerCase())\n//   );\n\nconst ContactList = () => {\n  // const items = useSelector(state => state.contacts.items);\n  // const filter = useSelector(state => state.contacts.filter);\n  // const contacts = selectFilteredContacts(items, filter);\n\n  const contacts = useSelector(selectFilteredContacts);\n\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(deleteContact(id));\n  };\n\n  return (\n    <ul className={css.List}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.ContactItem} key={id}>\n          <p className={css.ContactItemText}>\n            {name}\n            <span className={css.ContactItemSpan}>{number}</span>\n          </p>\n          <button\n            onClick={() => onDeleteContact(id)}\n            className={css.button}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nlistContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default ContactList;\n","import Form from '../../Phonebook/Form';\nimport Filter from '../../Filter/FilterContact';\nimport ContactList from '../../ContactsList/ContactsList';\n\nexport default function Book() {\n  return (\n    <>\n      <main>\n        <Form />\n        <Filter />\n        <ContactList />\n      </main>\n      <footer></footer>\n    </>\n  );\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["Form","useState","name","setName","number","setNumber","dispatch","useDispatch","useEffect","listContacts","handleChange","e","currentTarget","value","reset","className","css","onSubmit","preventDefault","addContact","type","onChange","pattern","title","required","disabled","useSelector","state","filter","evt","getFilter","trim","selectFilteredContacts","selectFilter","contacts","items","item","toLowerCase","includes","PropTypes","id","map","onClick","deleteContact","onDeleteContact","Book","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}